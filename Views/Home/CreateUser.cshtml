@model MISM5104.Models.UsersVm

<div class="row">
	<div class="col-md-4">
		@using (Html.BeginForm("SaveUser", "Home", FormMethod.Post))
		{
			@Html.AntiForgeryToken()

			<div class="form-horizontal">
				<hr />
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })
				<div class="form-group">
					@Html.LabelFor(model => model.UserRole, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.DropDownListFor(model => model.UserRole, new List<string>
						{
							"Admin","Student","Instructor"
						}.Select(m => new SelectListItem
						{
							Text = m,
							Value = m
						}), "--select role--", new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.UserRole, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
					</div>
				</div>

                
				<div class="form-group">
					@Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
						{
							new SelectListItem{Value = "M",Text = "Male"},
							new SelectListItem{Value = "F",Text = "Female"}
						}, "--select gender--", new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type="password" } })
						@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
						@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
					</div>
				</div>


				<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<input type="submit" value="Save User" class="btn btn-primary" />
					</div>
				</div>
			</div>
		}
	</div>
	<div class="col-md-8">
		<h5>List of Users</h5>
		<table class="table table-striped table-bordered display compact" id="grid">
			<thead>
			<tr>
				<th>#</th>
				<th>Full Name</th>
				<th>User Role</th>
				<th>Username</th>
				<th>Email</th>
				<th></th>
			</tr>
			</thead>
			<tbody>
			@if (Model.Users.Any())
			{
				var i = 1;
				foreach (var user in Model.Users.OrderBy(m => m.FullName))
				{
					<tr>
						<td>@i</td>
						<td>@user.FullName</td>
						<td>@user.UserRole</td>
						<td>@user.Username</td>
						<td>@user.Email</td>
						<td>
							<a href="" class="btn btn-success btn-sm"> Edit</a>
							<a href="" class="btn btn-danger btn-sm"> Delete</a>
						</td>
					</tr>
					i++;
				}
			}
			</tbody>
		</table>
	</div>
</div>
@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	<script src="~/Scripts/bootstrap.min.js"></script>
	<script type="text/javascript">
		$(function () {
			$('#grid').dataTable();
		});
		
	</script>
}